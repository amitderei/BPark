package common;

import java.io.Serializable;

/**
 * A lightweight POJO that mirrors a row in the Subscriber table.
 * Instances travel between client and server via Java serialization.
 *
 * Main fields:
 * • subscriberCode – primary key generated by the DB  
 * • userId         – Israeli ID (9 digits)  
 * • first/lastName – personal details  
 * • phoneNum       – mobile number, format 05XXXXXXXX  
 * • email          – contact address  
 * • username       – login name used on the client  
 * • tagId          – optional RFID tag attached to the car
 */
@SuppressWarnings("serial")
public class Subscriber implements Serializable {

    /* core columns */
    private int    subscriberCode;
    private String userId;
    private String firstName;
    private String lastName;
    private String phoneNum;
    private String email;
    private String username;
    private String tagId;

    /* ---- constructors ---- */

    /**
     * Full constructor, used when we load a complete record.
     */
    public Subscriber(int subscriberCode,
                      String userId,
                      String firstName,
                      String lastName,
                      String phoneNum,
                      String email,
                      String username,
                      String tagId) {

        this.subscriberCode = subscriberCode;
        this.userId         = userId;
        this.firstName      = firstName;
        this.lastName       = lastName;
        this.phoneNum       = phoneNum;
        this.email          = email;
        this.username       = username;
        this.tagId          = tagId;
    }

    /** Constructor used when we only know the primary key. */
    public Subscriber(int subscriberCode) {
        this.subscriberCode = subscriberCode;
    }

    /** Empty constructor required by some frameworks. */
    public Subscriber() { }

    /** Constructor used when we just need the username. */
    public Subscriber(String username) {
        this.username = username;
    }

    /* ------ getters / setters ------  */

    public int    getSubscriberCode()      { return subscriberCode; }
    public String getUserId()              { return userId; }
    public String getFirstName()           { return firstName; }
    public String getLastName()            { return lastName; }
    public String getPhoneNum()            { return phoneNum; }
    public String getEmail()               { return email; }
    public String getUsername()            { return username; }
    public String getTagId()               { return tagId; }

    public void setSubscriberCode(int code)    { this.subscriberCode = code; }
    public void setUserId(String userId)       { this.userId = userId; }
    public void setFirstName(String firstName) { this.firstName = firstName; }
    public void setLastName(String lastName)   { this.lastName = lastName; }
    public void setPhoneNum(String phoneNum)   { this.phoneNum = phoneNum; }
    public void setEmail(String email)         { this.email = email; }
    public void setUsername(String username)   { this.username = username; }
    public void setTagId(String tagId)         { this.tagId = tagId; }

    /* ---- utility ---- */

    /**
     * Compares all business fields to decide whether anything changed.
     *
     * @param a first subscriber
     * @param b second subscriber
     * @return true when every field holds the same value
     */
    public static boolean equals(Subscriber a, Subscriber b) {
        return  a.subscriberCode == b.subscriberCode &&
                a.userId        .equals(b.userId)   &&
                a.firstName     .equals(b.firstName) &&
                a.lastName      .equals(b.lastName) &&
                a.phoneNum      .equals(b.phoneNum) &&
                a.email         .equals(b.email)    &&
                a.username      .equals(b.username);
    }
}

